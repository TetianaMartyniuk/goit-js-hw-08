{"mappings":"gfASA,IAoCUA,EApCVC,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,SACnCE,EAAWH,SAASC,cAAc,YAElCG,EAAM,sBA8BFR,EAAUS,KAAKC,MAAMC,aAAaC,QAAQJ,IAEhDF,EAAUO,MAAQb,EAAQc,MAC1BP,EAASM,MAAQb,EAAQe,QA5B7BZ,EAAaa,iBAAiB,SAAS,EAAAf,EAAAgB,WAIvC,SAAsBC,GAClBA,EAAMC,iBAEN,IAAMC,EAAUF,EAAMG,cAAcC,SAChCC,EAAU,GACdA,EAAQT,MAAQM,EAAQN,MAAMD,MAC9BU,EAAQR,QAAUK,EAAQL,QAAQF,MAClCF,aAAaa,QAAQhB,EAAKC,KAAKgB,UAAUF,G,GAXiB,MAC9DpB,EAAaa,iBAAiB,UAa9B,SAAmBE,GACfA,EAAMC,iBACND,EAAMG,cAAcK,QACpBf,aAAagB,WAAWnB,E","sources":["src/js/03-feedback.js"],"sourcesContent":["//1 Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з \n//полями email і message, у яких зберігай поточні значення полів форми.\n//2 Нехай ключем для сховища буде рядок \"feedback-form-state\".\n//3 Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, \n//заповнюй ними поля форми.В іншому випадку поля повинні бути порожніми.\n//4 Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль \n//об'єкт з полями email, message та їхніми поточними значеннями.\n//5 Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. \n//Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\nimport { add, throttle } from \"lodash\";\n\nconst feedbackForm = document.querySelector(\".feedback-form\");\nconst formInput = document.querySelector(\"input\");\nconst formText = document.querySelector(\"textarea\");\n\nconst key = \"feedback-form-state\";\n// console.log(formInput);\n\nformUpdate();\n\nfeedbackForm.addEventListener(\"input\", throttle(addToStorage, 1000));\nfeedbackForm.addEventListener(\"submit\", clearForm);\n\n\nfunction addToStorage(event) {\n    event.preventDefault();\n    // console.dir(event);\n    const newData = event.currentTarget.elements;\n    let dataObj = {};\n    dataObj.email = newData.email.value;\n    dataObj.message = newData.message.value;\n    localStorage.setItem(key, JSON.stringify(dataObj))\n\n}\nfunction clearForm(event) {\n    event.preventDefault();\n    event.currentTarget.reset();\n    localStorage.removeItem(key)\n    // if (formInput.value !== \"\" && formText.value !== \"\") {\n    //     formInput.value = \"\"\n    //     formText.value = \"\"\n    // }\n}\n\nfunction formUpdate() {\n    const getData = JSON.parse(localStorage.getItem(key));\n    // console.log(getData);\n    formInput.value = getData.email;\n    formText.value = getData.message;\n\n}\n\n\n\n\n\n\n// let getEmail = (event) => {\n//     if (event.target.type === \"email\") {\n//         return emailValue = event.target.value;\n//     }\n//     if (event.target.type !== \"textarea\") {\n//         return messageValue = event.target.value;\n//     }\n//     let formText = {\n//         email: emailValue,\n//         message: messageValue,\n//     }\n\n//     return formText\n// }"],"names":["getData","$1WSnx","parcelRequire","$b00c40859be242c5$var$feedbackForm","document","querySelector","$b00c40859be242c5$var$formInput","$b00c40859be242c5$var$formText","$b00c40859be242c5$var$key","JSON","parse","localStorage","getItem","value","email","message","addEventListener","throttle","event","preventDefault","newData","currentTarget","elements","dataObj","setItem","stringify","reset","removeItem"],"version":3,"file":"03-feedback.fe6eac5c.js.map"}