{"mappings":"gfASA,IAsCUA,EAtCVC,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,kBACtCC,EAAYF,SAASC,cAAc,SACnCE,EAAWH,SAASC,cAAc,YAElCG,EAAM,sBAgCFR,EAAUS,KAAKC,MAAMC,aAAaC,QAAQJ,IAChDK,QAAQC,IAAId,GACRA,IACJM,EAAUS,MAAQf,EAAQgB,KAC1BT,EAASQ,MAAQf,EAAQiB,MA/B7Bd,EAAae,iBAAiB,SAAS,EAAAjB,EAAAkB,WAIvC,SAAsBC,GAClBA,EAAMC,iBACN,IAAIC,EAAUF,EAAMG,cAAcC,SAG9BC,EAAU,GAEdA,EAAQT,KAAOM,EAAQI,MAAMX,MAC7BU,EAAQR,KAAOK,EAAQK,QAAQZ,MAC/BJ,aAAaiB,QAAQpB,EAAKC,KAAKoB,UAAUJ,G,GAbiB,MAC9DtB,EAAae,iBAAiB,UAe9B,SAAmBE,GACfA,EAAMC,iBACND,EAAMG,cAAcO,QACpBnB,aAAaoB,WAAWvB,E","sources":["src/js/03-feedback.js"],"sourcesContent":["//1 Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з \n//полями email і message, у яких зберігай поточні значення полів форми.\n//2 Нехай ключем для сховища буде рядок \"feedback-form-state\".\n//3 Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, \n//заповнюй ними поля форми.В іншому випадку поля повинні бути порожніми.\n//4 Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль \n//об'єкт з полями email, message та їхніми поточними значеннями.\n//5 Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. \n//Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\nimport { throttle } from \"lodash\";\n\nconst feedbackForm = document.querySelector(\".feedback-form\");\nconst formInput = document.querySelector(\"input\");\nconst formText = document.querySelector(\"textarea\");\n\nconst key = \"feedback-form-state\";\n// console.log(formInput);\n\nformUpdate();\n\nfeedbackForm.addEventListener(\"input\", throttle(addToStorage, 1000));\nfeedbackForm.addEventListener(\"submit\", clearForm);\n\n\nfunction addToStorage(event) {\n    event.preventDefault();\n    let newData = event.currentTarget.elements;\n    // console.dir(newData);\n\n    let dataObj = {};\n    \n    dataObj.mail = newData.email.value;\n    dataObj.text = newData.message.value;\n    localStorage.setItem(key, JSON.stringify(dataObj))\n\n}\nfunction clearForm(event) {\n    event.preventDefault();\n    event.currentTarget.reset();\n    localStorage.removeItem(key)\n    // if (formInput.value !== \"\" && formText.value !== \"\") {\n    //     formInput.value = \"\"\n    //     formText.value = \"\"\n    // }\n}\n\nfunction formUpdate() {\n    const getData = JSON.parse(localStorage.getItem(key));\n    console.log(getData);\n    if (getData) {\n    formInput.value = getData.mail;\n    formText.value = getData.text;\n    }\n\n}\n\n\n\n\n\n\n// let getEmail = (event) => {\n//     if (event.target.type === \"email\") {\n//         return emailValue = event.target.value;\n//     }\n//     if (event.target.type !== \"textarea\") {\n//         return messageValue = event.target.value;\n//     }\n//     let formText = {\n//         email: emailValue,\n//         message: messageValue,\n//     }\n\n//     return formText\n// }"],"names":["getData","$1WSnx","parcelRequire","$b00c40859be242c5$var$feedbackForm","document","querySelector","$b00c40859be242c5$var$formInput","$b00c40859be242c5$var$formText","$b00c40859be242c5$var$key","JSON","parse","localStorage","getItem","console","log","value","mail","text","addEventListener","throttle","event","preventDefault","newData","currentTarget","elements","dataObj","email","message","setItem","stringify","reset","removeItem"],"version":3,"file":"03-feedback.15e285a9.js.map"}